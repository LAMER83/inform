<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class SamplingProcent extends FormRequest
{
    private $sum = 0;
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\Rule|array|string>
     */
    public function rules(): array
    {
        return [
            'box_id' => 'numeric',
            'f50' => 'nullable|numeric|max:100',
            'f40' => 'nullable|numeric|max:100',
            'f30' => 'nullable|numeric|max:100',
            'notStandart' => 'nullable|numeric|max:100',
            'waste' => 'nullable|numeric|max:100',
            'land' => 'nullable|numeric|max:100',
            'sum' => 'nullable|numeric|min:100'

        ];
    }
    public function messages()
    {
        return [
            'numeric' => 'Значение может быть пустым или числом',
            'max' => "Значение одного поля не может быть больше 100",
            'sum.min' => "Сумма по всем полям должна быть равной 100"
        ]; // TODO: Change the autogenerated stub
    }

    public function prepareForValidation(){
        if (filter_var($this->f50, FILTER_VALIDATE_FLOAT) <> false) {
          $this->sum += $this->f50;
        }
        if (filter_var($this->f40, FILTER_VALIDATE_FLOAT) <> false) {
            $this->sum += $this->f40;
        }
        if (filter_var($this->f30, FILTER_VALIDATE_FLOAT) <> false) {
            $this->sum += $this->f30;
        }
        if (filter_var($this->notStandart, FILTER_VALIDATE_FLOAT) <> false) {
            $this->sum += $this->notStandart;
        }
        if (filter_var($this->waste, FILTER_VALIDATE_FLOAT) <> false) {
            $this->sum += $this->waste;
        }
        if (filter_var($this->land, FILTER_VALIDATE_FLOAT) <> false) {
            $this->sum += $this->land;
        }
        if ($this->sum <> 0){
        $this->merge(['sum' => $this->sum]);
        }
    }

    public function withValidator($validator){
        $validator->after(function ($validator) {
           if ($this->sum <> 100){
               $validator->errors()->add('f50', 'Сумма по всем полям должна быть равной 100');
           }
        });

    }


}
